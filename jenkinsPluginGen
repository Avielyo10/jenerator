#! /usr/bin/env python
import os,sys
def createDir(dirName):
    try:
        os.mkdir(dirName)
    except:
        print("Directory "+dirName+" already exists")


def toolInstaller(toolName):
    createDir(toolName+"/Installation")
    with open("txt/$TOOL+INSTALLER.txt", "rt") as txtInstaller:
        with open(toolName+"/Installation/"+toolName+'Installer.java', "wt") as javaInstaller:
            for line in txtInstaller:
                javaInstaller.write(line.replace('$TOOL+INSTALLER', toolName+'Installer'))


def toolInstallation(toolName):
    toolInstaller(toolName)
    with open("txt/$TOOL+INSTALLATION.txt", "rt") as txtInstallation:
        with open(toolName+"/Installation/"+toolName+'Tool.java', "wt") as javaInstallation:
            for line in txtInstallation:
                if '$TOOL+NAME' in line:
                    javaInstallation.write(line.replace('$TOOL+NAME', toolName))
                else:
                    javaInstallation.write(line.replace('$TOOL+INSTALLATION',toolName+'Tool'))     
    
            
def toolUtil(toolName):
    createDir(toolName+"/util")
    with open("txt/$TOOL+UTIL.txt", "rt") as txtUtil:
        with open(toolName+"/util/"+toolName+'Util.java', "wt") as javaUtil:
            for line in txtUtil:
                javaUtil.write(line.replace('$TOOL+UTIL', toolName+'Util'))


def toolBuilder(toolName):
    with open("txt/$TOOL+BUILDER.txt", "rt") as txtBuilder:
        with open(toolName+"/"+toolName+'Builder.java', "wt") as javaBuilder:
            for line in txtBuilder:
                if "$TOOL+UTIL" in line:
                    javaBuilder.write(line.replace('$TOOL+UTIL', toolName+'Util')) 
                else:    
                    javaBuilder.write(line.replace('$TOOL+BUILDER', toolName+'Builder'))


def toolWrapper(toolName):
    with open("txt/$TOOL+WRAPPER.txt", "rt") as txtWrapper:
        with open(toolName+"/"+toolName+'Wrapper.java', "wt") as javaWrapper:
            for line in txtWrapper:
                if "$TOOL+INSTALLATION" in line:
                    javaWrapper.write(line.replace('$TOOL+INSTALLATION',toolName+'Tool'))
                elif "$TOOL+UTIL" in line:
                    javaWrapper.write(line.replace('$TOOL+UTIL', toolName+'Util'))
                else:
                    javaWrapper.write(line.replace('$TOOL+WRAPPER', toolName+'Wrapper')) 


def toolPublisher(toolName):
    with open("txt/$TOOL+PUBLISHER.txt", "rt") as txtPublisher:
        with open(toolName+"/"+toolName+'Publisher.java', "wt") as javaPublisher:
            for line in txtPublisher:
                javaPublisher.write(line.replace('$TOOL+PUBLISHER', toolName+'Publisher'))            


def all(toolName):
    toolInstallation(toolName)
    toolWrapper(toolName)
    toolBuilder(toolName)
    toolPublisher(toolName)
    toolUtil(toolName)

def help():
    print "usage: jenkinsPluginGen --name (toolName) [options ...]"
    print "--name       :the tool name"
    print "-A           :make it all - used by default"
    print "-B           :make Builder"
    print "-I           :make Installation"
    print "-P           :make Publisher"
    print "-U           :make Util"
    print "-W           :make Wrapper"
    print "-h, --help   :call help and exit"

def checkArgv(argv,toolName):
    commandsAndToolName = ["jenkinsPluginGen","./jenkinsPluginGen","-h","--help","--name","-A","-B","-I","-P","-U","-W",toolName]
    for i in argv:
        if i not in commandsAndToolName:
            print i + " - command not found."
            exit(help())
        

def main():
    if len(sys.argv) == 2 and ("-h" in sys.argv or "--help" in sys.argv):
        exit(help())

    if "--name" not in sys.argv:
        print "Error: --name is not inserted"
        exit(help())
    
    try:
        pluginName = sys.argv[sys.argv.index("--name") + 1]
        if '-' in pluginName:
            print "Error: --name is not inserted"
            exit(help())
    except IndexError:
        print "Error: --name is not inserted"
        exit(help())
    
    isValid = False
    checkArgv(sys.argv,pluginName)

    try:
        int(pluginName)
    except ValueError:
        isValid = True

    if isValid:
        createDir(pluginName) 
    else:
        exit("Need to enter a vaild name - exiting now")
    
    if len(sys.argv) == 3:
        all(pluginName)

    if "-A" in sys.argv:
        all(pluginName)
    
    if "-B" in sys.argv:
        toolBuilder(pluginName)
    
    if "-I" in sys.argv:
        toolInstallation(pluginName)

    if "-P" in sys.argv:
        toolPublisher(pluginName)

    if "-U" in sys.argv:
        toolUtil(pluginName)

    if "-W" in sys.argv:
        toolWrapper(pluginName)
    
    if "-h" in sys.argv or "--help" in sys.argv:
        exit(help())

if __name__ == "__main__":
    main()